@page "/game"
@page "/game/{id:int}"
@inject NavigationManager NavigationManager

<PageTitle>@Title</PageTitle>
<h1>Game Catalog</h1>
<h3>@Title</h3>

@if (game is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="col-sm-4">
            <EditForm Model="@game" OnValidSubmit="HandleSubmit">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="mb-3">
                    <label for="name" class="form-label">Name:</label>
                    <InputText id="name" @bind-Value="game.Name" class="form-control no-autofill" autocomplete="off" />
                </div>
                <div class="mb-3">
                    <label for="genre" class="form-label">Genre:</label>
                    <InputSelect id="genre" @bind-Value="game.Genre" class="form-select">
                        <option value="">Select genre</option>
                        <option value="Fighting">Fighting</option>
                        <option value="Kids and Family">Kids and Family</option>
                        <option value="Racing">Racing</option>
                        <option value="Roleplaying">Roleplaying</option>
                        <option value="Sports">Sports</option>
                    </InputSelect>
                </div>
                <div class="mb-3">
                    <label for="price" class="form-label">Price:</label>
                    <InputNumber id="price" @bind-Value="game.Price" class="form-control" />
                </div>
                <div class="mb-3">
                    <label for="releaseDate" class="form-label">Release Date:</label>
                    <InputDate id="releaseDate" @bind-Value="game.ReleaseDate" class="form-control" />
                </div>
                <button type="submit" class="btn btn-primary"> <i class="oi oi-circle-check"></i>Save</button>
                <button type="button" class="btn btn-warning" @onclick="Cancelation">Cancel</button>
            </EditForm>
        </div>
    </div>
}
@code {

    [Parameter] public int? Id { get; set; }
    public required string Title { get; set; }
    private Game? game;
    protected override void OnParametersSet()
    {
        if (Id is not null)
        {
            var foundGame = GameClient.GetGame(Id.Value);
            game = new()
                {
                    Id = foundGame.Id,
                    Name = foundGame.Name,
                    Genre = foundGame.Genre,
                    Price = foundGame.Price,
                    ReleaseDate = foundGame.ReleaseDate
                };
            Title = $"Edit {game.Name}";
        }
        else
        {
            Title = "New Game";
            game = new()
                {
                    Name = string.Empty,
                    Genre = string.Empty,
                    ReleaseDate = DateTime.UtcNow
                };
        }
    }





    private void HandleSubmit()
    {
        if (game!.Id == 0)
        {
            GameClient.AddGame(game);
        }
        else
        {
            GameClient.UpdateGame(game);

        }

        NavigationManager.NavigateTo("/");
    }
    private void Cancelation()
    {
        NavigationManager.NavigateTo("/");
    }
}



